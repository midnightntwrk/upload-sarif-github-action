name: Checkmarx One Scan

# ↓ lock down top‐level permissions to only what we use
permissions:
  contents: read             # we only need to checkout code
  actions: read              # to query workflows/runs
  pull-requests: write       # to comment on or label PRs

on:
  pull_request:
    branches: [ '**' ]
  push:
    branches: [ 'main' ]
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true
jobs:
  build:
    permissions:
      contents: read
      pull-requests: write
      security-events: write

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  #v5.0.0

      - name: Scrape Checkmarx status
        run: |
          # URL of the status page
          url="https://eu2-status.ast.checkmarx.net/"
          html=$(curl -s "$url")

          if echo "$html" | grep -q "Operating Normally"; then
            echo "Checkmarx is having issues. Proceeding without breaking the build."
            exit 0  # Do not fail the build
          fi

      - name: Check Checkmarx One server health
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://ind-status.ast.checkmarx.net/)
          if [ "$response" != "200" ]; then
            echo "Checkmarx One server is down. Proceeding without breaking the build."
            exit 0  # Do not fail the build
          else
            echo "Checkmarx One server is healthy. Proceeding with scan."
          fi

      - name: Checkmarx One CLI Action
        uses: checkmarx/ast-github-action@ef313c2c19e03e90ae35e795724fb1d20830dc33 #2.3.26
        with:
          cx_tenant: ${{ secrets.CX_TENANT }}
          base_uri: https://eu-2.ast.checkmarx.net/
          cx_client_id: ${{ secrets.CX_CLIENT_ID }}
          cx_client_secret: ${{ secrets.CX_CLIENT_SECRET_EU }}
          additional_params: >
            --scs-repo-url https://github.com/${{ github.repository }}
            --scs-repo-token ${{ secrets.MIDNIGHTCI_REPO }}
            --report-format sarif

      # if artifactLocation is empty github will fail the whole import
      - name: Filter out repo level issues that github can't handle
        run: |
          mv ./cx_result.sarif ./cx_result.sarif.orig
          jq '. | .runs[0].results |= map(select(.locations[0].physicalLocation.artifactLocation.uri != ""))' cx_result.sarif.orig > cx_result.sarif

      # Upload report so security issues are viewable from within the github ui
      - name: Upload SARIF file
        if: ${{ github.event.repository.private == false }}
        uses: github/codeql-action/upload-sarif@aeaa720d65caa766c18788224dc84cddd1ba1c03  # v3.29.2
        with:
          sarif_file: cx_result.sarif
