name: 'Checkmarx Full Scan and Upload'
description: 'Performs complete Checkmarx scan with SARIF upload to both GitHub Security and Checkmarx BYOR'
author: 'Midnight'
branding:
  icon: 'shield'
  color: 'blue'

inputs:
  project-name:
    description: 'Checkmarx project name'
    required: true
    default: ${{ github.event.repository.name }}
  cx-client-id:
    description: 'Checkmarx OAuth2 client ID'
    required: true
  cx-client-secret:
    description: 'Checkmarx OAuth2 client secret'
    required: true
  cx-tenant:
    description: 'Checkmarx tenant'
    required: true
  base-uri:
    description: 'Checkmarx server URL'
    required: false
    default: 'https://eu-2.ast.checkmarx.net/'
  scs-repo-token:
    description: 'GitHub token for SCS scanning (Supply Chain Security)'
    required: true
  additional-params:
    description: 'Additional parameters for Checkmarx scan'
    required: false
    default: ''
  upload-to-github:
    description: 'Upload SARIF to GitHub Security (automatically disabled for private repos)'
    required: false
    default: 'true'
  upload-to-checkmarx:
    description: 'Upload SARIF to Checkmarx via BYOR'
    required: false
    default: 'true'

outputs:
  scan-id:
    description: 'Checkmarx scan ID'
    value: ${{ steps.checkmarx-scan.outputs.scan-id }}
  sarif-file:
    description: 'Path to generated SARIF file'
    value: 'cx_result.sarif'

runs:
  using: 'composite'
  steps:
    - name: Check Checkmarx service health
      id: health
      uses: ./upload-sarif-github-action/shared/health-check

    - name: Notify if skipping Checkmarx
      if: steps.health.outputs.skip-scan == 'true'
      shell: bash
      run: |
        echo "::warning::Skipping Checkmarx scan due to service unavailability"
        echo "ℹ️ Build will continue without security scanning to avoid blocking development"

    - name: Run Checkmarx scan
      id: checkmarx-scan
      if: env.SKIP_CHECKMARX != 'true'
      uses: checkmarx/ast-github-action@fa338ce82069b297c4852ac77e2d168db9fb56d8 #2.3.21
      with:
        cx_tenant: ${{ inputs.cx-tenant }}
        base_uri: ${{ inputs.base-uri }}
        cx_client_id: ${{ inputs.cx-client-id }}
        cx_client_secret: ${{ inputs.cx-client-secret }}
        additional_params: >
          --scs-repo-url https://github.com/${{ github.repository }}
          --scs-repo-token ${{ inputs.scs-repo-token }}
          --report-format sarif
          ${{ inputs.additional-params }}

    - name: Fix SARIF for GitHub upload
      if: env.SKIP_CHECKMARX != 'true'
      uses: ./upload-sarif-github-action/shared/fix-sarif
      with:
        sarif-file: cx_result.sarif

    - name: Upload SARIF to GitHub Security
      if: ${{ env.SKIP_CHECKMARX != 'true' && inputs.upload-to-github == 'true' && github.event.repository.private == false }}
      uses: github/codeql-action/upload-sarif@9fde80919ae2e536afc500421fa2c837105e21a1  # v3.29.2
      with:
        sarif_file: cx_result.sarif
      continue-on-error: true

    - name: Upload SARIF to Checkmarx BYOR
      if: ${{ env.SKIP_CHECKMARX != 'true' && inputs.upload-to-checkmarx == 'true' && hashFiles('cx_result.sarif') != '' }}
      # Note: When repo is private, this requires checking out the action first
      # Once public, can use: midnightntwrk/upload-sarif-github-action@main
      uses: ./upload-sarif-github-action
      with:
        sarif-file: cx_result.sarif
        project-name: ${{ inputs.project-name }}
        cx-client-id: ${{ inputs.cx-client-id }}
        cx-client-secret: ${{ inputs.cx-client-secret }}
        cx-tenant: ${{ inputs.cx-tenant }}
        base-uri: ${{ inputs.base-uri }}
      continue-on-error: true
