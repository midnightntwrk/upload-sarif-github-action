# Example workflow for midnight-indexer repository
# Based on Giles' requirements for Rust security scanning in Checkmarx

name: Rust Security Scan for Midnight Indexer

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write

jobs:
  rust-security-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Install cargo-audit
        run: |
          # Install latest cargo-audit with SARIF support
          cargo install cargo-audit --features vendored-openssl
      
      - name: Run cargo audit
        run: |
          # Generate SARIF report
          # Continue on error to ensure upload happens even if vulnerabilities found
          cargo audit --format sarif > scan.sarif || true
          
          # Log summary for visibility
          echo "Cargo audit scan completed"
          echo "SARIF file size: $(stat -c%s scan.sarif 2>/dev/null || stat -f%z scan.sarif) bytes"
          
          # Show vulnerability count in logs (optional)
          cargo audit --format json 2>/dev/null | jq -r '.vulnerabilities.count // 0' || echo "Unable to count vulnerabilities"
      
      - name: Upload SARIF to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: scan.sarif
          category: cargo-audit
      
      - name: Upload SARIF to Checkmarx
        uses: midnight-ntwrk/upload-sarif-github-action@v1
        with:
          sarif-file: scan.sarif
          project-name: midnight-indexer
          base-uri: https://eu-2.ast.checkmarx.net/
          cx-client-id: ${{ secrets.CX_CLIENT_ID }}
          cx-client-secret: ${{ secrets.CX_CLIENT_SECRET_EU }}
          cx-tenant: ${{ secrets.CX_TENANT }}
      
      - name: Comment on PR (if applicable)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const sarif = JSON.parse(fs.readFileSync('scan.sarif', 'utf8'));
              const resultCount = sarif.runs?.[0]?.results?.length || 0;
              
              if (resultCount > 0) {
                const comment = `üîç **Rust Security Scan Results**\n\n` +
                  `Found ${resultCount} potential security issue(s).\n\n` +
                  `Results have been uploaded to:\n` +
                  `- ‚úÖ GitHub Security tab\n` +
                  `- ‚úÖ Checkmarx dashboard\n\n` +
                  `Please review the findings in the Security tab.`;
                
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: comment
                });
              }
            } catch (e) {
              console.log('Could not parse SARIF or comment on PR:', e);
            }